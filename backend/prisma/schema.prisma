generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model classrooms {
  id        Int        @id @default(autoincrement())
  nome      String     @db.VarChar(50) // Ex: "1ยบ Ano A"
  students  students[]
  lessons   lessons[]
}

model students {
  id           Int        @id @default(autoincrement())
  nome         String     @db.VarChar(100)
  matricula    String?    @db.VarChar(255) @unique
  aniversario  DateTime   @db.Date
  email        String     @db.VarChar(100)
  genero       String     @db.VarChar(10)
  telefone     String     @db.VarChar(15)
  notas        Json       @default("[]")
  responsavel1 String     @db.VarChar(100)
  responsavel2 String?    @db.VarChar(100)

  classroomId  Int?
  classroom    classrooms? @relation(fields: [classroomId], references: [id])

  records      records[]
  absences     absences[]
}

model records {
  id          Int       @id @default(autoincrement())
  responsavel String
  motivo      String
  tipo        String
  data        DateTime  @default(now())
  dias        Int?

  studentid   Int
  student     students  @relation(fields: [studentid], references: [id])
}

model teachers {
  id          Int       @id @default(autoincrement())
  nome        String    @db.VarChar(100)
  telefone    String    @db.VarChar(12) @unique
  email       String    @db.VarChar(100) @unique
  senha       String    @db.VarChar(255)
  genero      String    @db.VarChar(10)
  aniversario DateTime  @db.Date
  disciplinas Json      @default("[]")
  classes     Json      @default("[]")

  lessons     lessons[]
}

model management {
  id          Int       @id @default(autoincrement())
  nome        String    @db.VarChar(100)
  telefone    String    @db.VarChar(12) @unique
  email       String    @db.VarChar(100) @unique
  senha       String    @db.VarChar(255)
  genero      String    @db.VarChar(10)
  aniversario DateTime  @db.Date
  cargo       String    @db.VarChar(30)
}

model lessons {
  id           Int        @id @default(autoincrement())
  titulo       String     @db.VarChar(100)
  descricao    String
  inicio       DateTime
  fim          DateTime

  classroomId  Int
  classroom    classrooms @relation(fields: [classroomId], references: [id])

  professorId  Int
  professor    teachers   @relation(fields: [professorId], references: [id])

  absences     absences[]
}

model absences {
  id          Int        @id @default(autoincrement())
  lessonId    Int
  studentId   Int

  lesson      lessons    @relation(fields: [lessonId], references: [id])
  student     students   @relation(fields: [studentId], references: [id])
}

model logs {
  id          Int       @id @default(autoincrement())
  title       String
  description String
  userid      Int?
  table       String?
  level       String
  date        DateTime @default(now())
}
